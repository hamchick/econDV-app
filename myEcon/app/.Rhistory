shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp('app - 複製.R')
library(shiny); runApp('app - 複製.R')
runApp('app - 複製.R')
runApp('app - 複製.R')
library(shiny); runApp('app - 複製.R')
library(shiny); runApp('app - 複製.R')
library(shiny); runApp('app - 複製.R')
library(shiny); runApp('app - 複製.R')
#output_distPlot <-  {ggplot(data=sample)}
#input = "AMT_ANNUITY"
#input2 = "CONTRACT_TYPE"
select1<-select(sample,input)
library(shiny)
library(ggplot2)
library(plotly)
sample <- read.csv("./SampleData.csv")
sample$TARGET = as.character(sample$TARGET)
input_bins = 30
input = "AMT_ANNUITY"
input2 = "CONTRACT_TYPE"
select1<-select(sample,input)
select2<-select(sample,input2)
#output_distPlot <-  {ggplot(data=sample)}
#input = "AMT_ANNUITY"
#input2 = "CONTRACT_TYPE"
select1<-select(sample,input)
select2<-select(sample,input2)
if (is.character(select1[1,1])) {
if (is.character(select2[1,1])){
output_distPlot <- ggplot(data = sample) + geom_count(
aes(x=get(input$varible1), y = get(input$varible2))
)
} else {
output_distPlot <- ggplot(data = sample) + geom_col(
aes(x=get(input$varible1), y = get(input$varible2))
)
}
} else {
if (is.character(select2[1,1])){
output_distPlot <- ggplot(data = sample) + geom_col(
aes(x=get(input$varible1), y = get(input$varible2))
)
}else{
output_distPlot <- ggplot(data = sample) + geom_smooth(
aes(x=get(input$varible1), y = get(input$varible2))
)
}
}
#output_distPlot
