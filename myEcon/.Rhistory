ggplot(data=sample) +
geom_count(
aes(x=sample$NAME_CONTRACT_TYPE, y = target_type), bins=as.numeric(input_bins)
)+  scale_size_area(max_size = 15)
}
output_distPlot
output_distPlot %>%
ggplotly() -> output_distPlot
ggplotly(output_distPlot) -> output_distPlot
library(shiny)
library(ggplot2)
library(plotly)
sample <- read.csv("./SampleData.csv")
input_bins = 30
target_type = as.character(sample$TARGET)
output_distPlot <-  {
ggplot(data=sample) +
geom_count(
aes(x=sample$NAME_CONTRACT_TYPE, y = target_type), bins=as.numeric(input_bins)
)+  scale_size_area(max_size = 15)
}
output_distPlot
ggplotly(output_distPlot) -> output_distPlot
library(shiny)
library(ggplot2)
library(plotly)
sample <- read.csv("./SampleData.csv")
input_bins = 30
target_type = as.character(sample$TARGET)
output_distPlot <-  {
ggplot(data=sample) +
geom_count(
aes(x=sample$NAME_CONTRACT_TYPE, y = target_type), bins=as.numeric(input_bins)
)+  scale_size_area(max_size = 15)
}
ggplotly(output_distPlot) -> output_distPlot
output_distPlot
``rlang::last_error()
input_bins = 30
render_distPlot <- shiny::renderPlot
distPlot <-  {
ggplot(data=sample) +
geom_count(
aes(x=NAME_CONTRACT_TYPE, y = target_type), bins=as.numeric(input_bins)
)+  scale_size_area(max_size = 15)
}
library(shiny)
library(ggplot2)
library(plotly)
sample <- read.csv("./SampleData.csv")
target_type = as.character(sample$TARGET)
library(dplyr)
appSystem <- get_currentRmd()
library(shiny)
library(ggplot2)
library(plotly)
sample <- read.csv("./SampleData.csv")
target_type = as.character(sample$TARGET)
library(dplyr)
appSystem <- get_currentRmd()
input_bins = 30
render_distPlot <- shiny::renderPlot
distPlot <-  {
ggplot(data = sample) +
geom_count(
aes(x=NAME_CONTRACT_TYPE, y = target_type), bins=as.numeric(input_bins)
)+  scale_size_area(max_size = 15)
}
ggplotly(distPlot) -> output_distPlot
#output_distPlot
rlang::last_error()
rlang::last_trace()
library(shiny)
library(ggplot2)
library(plotly)
sample <- read.csv("./SampleData.csv")
target_type = as.character(sample$TARGET)
View(sample)
View(sample)
library(shiny)
library(ggplot2)
library(plotly)
sample <- read.csv("./SampleData.csv")
sample$TARGET = as.character(sample$TARGET)
p <-  {
ggplot(data=sample)
}
if (is.charater(sample$TARGET)) {
p <- p + geom_count(
aes(x=sample$id, y = sample$TARGET), bins=as.numeric(input_bins)
)
} else {
p <- p + geom_line()
}
p <-  {
ggplot(data=sample)
}
if (is.character(sample$TARGET)) {
p <- p + geom_count(
aes(x=sample$id, y = sample$TARGET), bins=as.numeric(input_bins)
)
} else {
p <- p + geom_line()
}
p <-  {
ggplot(data=sample)
}
if (is.character(sample$TARGET)) {
p <- p + geom_count(
aes(x=sample$id, y = sample$TARGET)
)
} else {
p <- p + geom_line()
}
output_distPlot <- p
output_distPlot
View(sample)
p <-  {
ggplot(data=sample)
}
if (is.character(sample$TARGET)) {
p <- p + geom_count(
aes(x=sample$X, y = sample$TARGET)
)
} else {
p <- p + geom_line()
}
output_distPlot <- p
output_distPlot
p <-  {
ggplot(data=sample)
}
if (is.character(sample$TARGET)) {
p <- p + geom_count(
aes(x=sample$CONTRACT_TYPE, y = sample$TARGET)
)
} else {
p <- p + geom_line()
}
output_distPlot <- p
output_distPlot
p <-  {
ggplot(data=sample)
}
p <- p + geom_smooth(
aes(x=sample$CONTRACT_TYPE, y = sample$TARGET)
)
output_distPlot <- p
output_distPlot
p <-  {
ggplot(data=sample)
}
p <- p + geom_smooth(
aes(x=sample$AMT_INCOME_TOTAL, y = sample$AMT_CREDIT)
)
p
p <-  {
ggplot(data=sample)
}
p <- p + geom_column(
aes(x=sample$AMT_INCOME_TOTAL, y = sample$TARGET)
)
p <- p + geom_col(
aes(x=sample$AMT_INCOME_TOTAL, y = sample$TARGET)
)
p
input$varible1 = sample$CONTRACT_TYPE
varible1 = sample$CONTRACT_TYPE
varible1 = sample$CONTRACT_TYPE
varible2 = sample$TARGET
p <-  {
ggplot(data=sample)
}
if (is.character(varible1)) {
if (is.character(varible2)){
p <- p + geom_count(
aes(x=varible1, y = varible2)
)
}
else {
p <- p + geom_col(
aes(x=varible1, y = varible2)
)
}
} else {
if (is.character(varible2)){
p <- p + geom_col(
aes(x=varible1, y = varible2)
)
}
else {
p <- p + geom_smooth(
aes(x=varible1, y = varible2)
)
}
}
output_distPlot <- p
output_distPlot
varible1 = sample$CONTRACT_TYPE
varible2 = sample$AMT_INCOME_TOTAL
p <-  {
ggplot(data=sample)
}
if (is.character(varible1)) {
if (is.character(varible2)){
p <- p + geom_count(
aes(x=varible1, y = varible2)
)
}
else {
p <- p + geom_col(
aes(x=varible1, y = varible2)
)
}
} else {
if (is.character(varible2)){
p <- p + geom_col(
aes(x=varible1, y = varible2)
)
}
else {
p <- p + geom_smooth(
aes(x=varible1, y = varible2)
)
}
}
output_distPlot <- p
output_distPlot
varible1 = sample$CONTRACT_TYPE
varible2 = sample$CONTRACT_TYPE
p <-  {
ggplot(data=sample)
}
if (is.character(varible1)) {
if (is.character(varible2)){
p <- p + geom_count(
aes(x=varible1, y = varible2)
)
}
else {
p <- p + geom_col(
aes(x=varible1, y = varible2)
)
}
} else {
if (is.character(varible2)){
p <- p + geom_col(
aes(x=varible1, y = varible2)
)
}
else {
p <- p + geom_smooth(
aes(x=varible1, y = varible2)
)
}
}
output_distPlot <- p
output_distPlot
varible1 = sample$AMT_ANNUITY
varible2 = sample$CONTRACT_TYPE
p <-  {
ggplot(data=sample)
}
if (is.character(varible1)) {
if (is.character(varible2)){
p <- p + geom_count(
aes(x=varible1, y = varible2)
)
}
else {
p <- p + geom_col(
aes(x=varible1, y = varible2)
)
}
} else {
if (is.character(varible2)){
p <- p + geom_col(
aes(x=varible1, y = varible2)
)
}
else {
p <- p + geom_smooth(
aes(x=varible1, y = varible2)
)
}
}
output_distPlot <- p
output_distPlot
library(shiny)
library(ggplot2)
library(plotly)
sample <- read.csv("./SampleData.csv")
sample$TARGET = as.character(sample$TARGET)
varible1 = AMT_ANNUITY
varible1 = "AMT_ANNUITY"
varible2 = "CONTRACT_TYPE"
sample$varible1 -> c
sample$varible2 -> d
varible1 = "AMT_ANNUITY"
varible2 = "CONTRACT_TYPE"
select1<-select(sample,varible1)
varible1 = "AMT_ANNUITY"
varible2 = "CONTRACT_TYPE"
select1<-select(sample,varible1)
select2<-select(sample,varible1)
View(select2)
View(select1)
varible1 = "AMT_ANNUITY"
varible2 = "CONTRACT_TYPE"
select1<-select(sample,varible1)
select2<-select(sample,varible2)
View(select2)
p <-  {
ggplot(data=sample)
}
#varible1 = "AMT_ANNUITY"
#varible2 = "CONTRACT_TYPE"
select1<-select(sample,input$varible1)
output_distPlot <-  {
ggplot(data=sample)
}
library(shiny)
library(ggplot2)
library(plotly)
sample <- read.csv("./SampleData.csv")
sample$TARGET = as.character(sample$TARGET)
output_distPlot <-  {
ggplot(data=sample)
}
input = "AMT_ANNUITY"
input2 = "CONTRACT_TYPE"
select1<-select(sample,input)
select2<-select(sample,input2)
if (is.character(select1)) {
if (is.character(select2)){
output_distPlot <- output_distPlot + geom_count(
aes(x=get(input), y = get(input2))
)
} else {
output_distPlot <- output_distPlot + geom_col(
aes(x=get(input), y = get(input2))
)
}
} else {
if (is.character(select2)){
output_distPlot <- output_distPlot + geom_col(
aes(x=get(input), y = get(input2))
)
}else{
output_distPlot <- output_distPlot + geom_smooth(
aes(x=get(input), y = get(input2))
)
}
}
output_distPlot <-  {
ggplot(data=sample)
}
input = "AMT_ANNUITY"
input2 = "CONTRACT_TYPE"
select1<-select(sample,input)
select2<-select(sample,input2)
if (is.character(select1)) {
if (is.character(select2)){
output_distPlot <- output_distPlot + geom_count(
aes(x=get(input), y = get(input2))
)
} else {
output_distPlot <- output_distPlot + geom_col(
aes(x=get(input), y = get(input2))
)
}
} else {
if (is.character(select2)){
output_distPlot <- output_distPlot + geom_col(
aes(x=get(input), y = get(input2))
)
}else{
output_distPlot <- output_distPlot + geom_smooth(
aes(x=get(input), y = get(input2))
)
}
}
output_distPlot <-  {
ggplot(data=sample)
}
input = "AMT_ANNUITY"
input2 = "CONTRACT_TYPE"
select1<-select(sample,input)
select2<-select(sample,input2)
if (is.character(select1)) {
if (is.character(select2)){
output_distPlot <- output_distPlot + geom_count(
aes(x=get(input), y = get(input2))
)
} else {
output_distPlot <- output_distPlot + geom_col(
aes(x=get(input), y = get(input2))
)
}
} else {
if (is.character(select2)){
output_distPlot <- output_distPlot + geom_col(
aes(x=get(input), y = get(input2))
)
}else{
output_distPlot <- output_distPlot + geom_smooth(
aes(x=get(input), y = get(input2))
)
}
}
output_distPlot
View(sample)
View(select2)
select2[1,1]
View(select1)
is.character(select1[1,1]
is.character(select1[1,1])
output_distPlot <-  {
ggplot(data=sample)
}
input = "AMT_ANNUITY"
input2 = "CONTRACT_TYPE"
select1<-select(sample,input)
select2<-select(sample,input2)
if (is.character(select1[1,1])) {
if (is.character(select2[1,1])){
output_distPlot <- output_distPlot + geom_count(
aes(x=get(input), y = get(input2))
)
} else {
output_distPlot <- output_distPlot + geom_col(
aes(x=get(input), y = get(input2))
)
}
} else {
if (is.character(select2[1,1])){
output_distPlot <- output_distPlot + geom_col(
aes(x=get(input), y = get(input2))
)
}else{
output_distPlot <- output_distPlot + geom_smooth(
aes(x=get(input), y = get(input2))
)
}
}
output_distPlot
output_distPlot <-  {
ggplot(data=sample) + {
}
}
#input = "AMT_ANNUITY"
#input2 = "CONTRACT_TYPE"
select1<-select(sample,input)
select2<-select(sample,input2)
if (is.character(select1[1,1])) {
if (is.character(select2[1,1])){
output_distPlot <- output_distPlot + geom_count(
aes(x=get(input), y = get(input2))
)
} else {
output_distPlot <- output_distPlot + geom_col(
aes(x=get(input), y = get(input2))
)
}
} else {
if (is.character(select2[1,1])){
output_distPlot <- output_distPlot + geom_col(
aes(x=get(input), y = get(input2))
)
}else{
output_distPlot <- output_distPlot + geom_smooth(
aes(x=get(input), y = get(input2))
)
}
}
#output_distPlot
output_distPlot <-  {
ggplot(data=sample) + {
if()
output_distPlot <-  {
ggplot(data=sample) + {
if(is.character(select2[1,1]))
}
output_distPlot <-  {
ggplot(data=sample)
}
#input = "AMT_ANNUITY"
#input2 = "CONTRACT_TYPE"
select1<-select(sample,input)
select2<-select(sample,input2)
if (is.character(select1[1,1])) {
if (is.character(select2[1,1])){
output_distPlot <- output_distPlot + geom_count(
aes(x=get(input), y = get(input2))
)
} else {
output_distPlot <- output_distPlot + geom_col(
aes(x=get(input), y = get(input2))
)
}
} else {
if (is.character(select2[1,1])){
output_distPlot <- output_distPlot + geom_col(
aes(x=get(input), y = get(input2))
)
}else{
output_distPlot <- output_distPlot + geom_smooth(
aes(x=get(input), y = get(input2))
)
}
}
#output_distPlot
